# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on:
  push:
    branches: ["master" ]
  pull_request:
    branches: ["master"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        #Code analysis
      - name: Set up Snyk CLI to check for security code issues
        uses: snyk/actions/maven-3-jdk-11@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --report --project-name="project" --target-name="1.2.3" --org=f1fc1cd7-30ef-4b2d-9ff5-51eb62b99a95
        #Applicational analysis          
      - name: Set up Snyk CLI to check for security issues
        uses: snyk/actions/maven-3-jdk-11@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor 
          args: --target-reference="1.2.3" --all-projects --org=f1fc1cd7-30ef-4b2d-9ff5-51eb62b99a95 --tags=repository=docker-maven-sample,tag=1.2.3
        #Container build
      - name: Build the Docker image
        run: docker build --file Dockerfile -t docker-maven-sample:1.2.3 .
        #Container scanning
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: docker-maven-sample:1.2.3 
          args: --file=Dockerfile --exclude-app-vulns --org=f1fc1cd7-30ef-4b2d-9ff5-51eb62b99a95 --target-reference=1.2.3 --tags=repository=docker-maven-sample,tag=1.2.3
          command: container monitor 
      

  
    
