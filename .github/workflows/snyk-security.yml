# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on:
  push:
    branches: ["master" ]
  pull_request:
    branches: ["master"]

permissions:
  contents: read

jobs:

  download-and-install:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Download Snyk Delta
      run: wget https://github.com/snyk-tech-services/snyk-delta/releases/download/v1.12.0/snyk-delta-linux -O snyk-delta
    - name: Verify SHA-256 Checksum
      run: |
        echo "7ba0e8a2ab6b6223790549c8430b8e94559be89f9c9b4e60f19915b72c3b7992  snyk-delta" > snyk-delta.sha256
        sha256sum -c snyk-delta.sha256
    - name: Make Snyk Delta executable
      run: chmod +x snyk-delta
    - name: Move Snyk Delta to /usr/local/bin
      run: sudo mv snyk-delta /usr/local/bin/snyk-delta
    - name: Verify Installation
      run: snyk-delta --version

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Snyk CLI to check for security code issues
        uses: snyk/actions/maven-3-jdk-11@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          #args: --report --project-name="project" --target-name="target" 
      - name: Set up Snyk CLI to check for security issues
        uses: snyk/actions/maven-3-jdk-11@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor 
          args: --target-reference="$(git branch --show-current)" --all-projects
      - name: Build the Docker image
        run: docker build --file Dockerfile -t docker-maven-sample:latest .
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: docker-maven-sample:latest 
          args: --file=Dockerfile --exclude-app-vulns --project-name="$(git branch --show-current)"
          command: monitor
      

  
    
